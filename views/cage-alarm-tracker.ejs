<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cage Alarm Tracker</title>
  <link rel="stylesheet" href="/stylesheets/styles.css">
  <link rel="icon" href="/images/LOGO-removebg-preview.png" sizes="32x32">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
  <style>
    .charts-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
    }

    @media (max-width: 950px) {
      .charts-container {
        flex-direction: column;
        align-items: center;
      }
    }

    .chart-container {
      width: 48%;
      margin-bottom: 20px;
    }

    @media (max-width: 950px) {
      .chart-container {
        width: 100%;
      }
    }
  </style>
</head>
<body>
    <%- include('header') %>

  <div class="container-normal">
    <h1>Cage Alarm Tracker</h1>

    <form action="/saveCageAlarm" method="post">
      <button type="submit">Add Cage Alarm</button>
    </form>
  </div>
  <br>

  <div class="container-normal">
    <select id="timeRange">
      <option value="week">Week Progress</option>
      <option value="month">Month Progress</option>
      <option value="year">Year Progress</option>
    </select>
    <button id="generateChartBtn" onclick="generateChart()">Generate Chart</button>
  </div>

  <div class="charts-container">
    <div class="chart-container">
      <canvas id="barChart"></canvas>
    </div>
  </div>

  <%- include('footer') %>

  <script>
    const cageAlarmData = JSON.parse('<%- JSON.stringify(cageAlarms) %>');
  
    let barChart;
    const barChartOptions = {
      responsive: true,
      scales: {
        y: {
          beginAtZero: true,
          stepSize: 1
        }
      },
      plugins: {
        title: {
          display: true,
          text: "Cage Alarm Count by Day"
        }
      }
    };
  
    function prepareBarChartData(timeRange) {
      const currentDate = new Date();
      const startDate = new Date();
      startDate.setHours(0, 0, 0, 0);
  
      if (timeRange === "week") {
        startDate.setDate(currentDate.getDate() - 7);
      } else if (timeRange === "month") {
        startDate.setMonth(currentDate.getMonth() - 1);
      } else if (timeRange === "year") {
        startDate.setFullYear(currentDate.getFullYear() - 1);
      }
  
      const dateLabels = [];
      const alarmCounts = [];
  
      let currentDateIterator = new Date(startDate);
      while (currentDateIterator <= currentDate) {
        const formattedDate = currentDateIterator.toLocaleDateString("en-US", {
          month: "short",
          day: "numeric"
        });
        dateLabels.push(formattedDate);
  
        const count = cageAlarmData.filter((alarm) => {
          const alarmDate = new Date(alarm.timestamp);
          return (
            alarmDate.toLocaleDateString("en-US", {
              month: "short",
              day: "numeric"
            }) === formattedDate
          );
        }).length;
        alarmCounts.push(count);
  
        currentDateIterator.setDate(currentDateIterator.getDate() + 1);
      }
  
      return { dateLabels, alarmCounts };
    }
  
    function generateChart() {
      const timeRange = document.getElementById("timeRange").value;
  
      fetch(`/getCageAlarmChartData?timeRange=${timeRange}`)
        .then(response => response.json())
        .then(data => {
          const chartData = {
            dateLabels: data.labels,
            alarmCounts: data.alarmCounts
          };
  
          if (barChart) {
            barChart.destroy();
          }
  
          const ctx = document.getElementById("barChart").getContext("2d");
          barChart = new Chart(ctx, {
            type: "bar",
            data: {
              labels: chartData.dateLabels,
              datasets: [{
                label: "Cage Alarms",
                data: chartData.alarmCounts,
                backgroundColor: "rgba(75, 192, 192, 0.2)",
                borderColor: "rgba(75, 192, 192, 1)",
                borderWidth: 1
              }]
            },
            options: barChartOptions
          });
        })
        .catch(error => {
          console.error("Error:", error);
          alert("Failed to generate chart data. Please try again later.");
        });
    }
  
    document.addEventListener("DOMContentLoaded", function() {
      generateChart();
    });
  </script>
  
</body>
</html>
