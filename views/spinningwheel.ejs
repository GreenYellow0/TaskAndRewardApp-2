<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <link rel="stylesheet" href="/stylesheets/styles.css">
  <link rel="icon" href="/images/LOGO-removebg-preview.png" sizes="32x32">
  <style>
    #app {
      width: 400px;
      height: 400px;
      margin: 0 auto;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      transition: top 0.3s ease-out;
    }

    .menu-open #app {
      top: 60%; /* Lower the spinning wheel when the dropdown is active */
    }

    .marker {
      position: absolute;
      width: 60px;
      left: 172px;
      top: -20px;
      z-index: 2;
    }

    .wheel {
      width: 100%;
      height: 100%;
    }

    .button {
      display: block;
      width: 250px;
      margin: 40px auto;
      cursor: pointer;
    }

    .button:hover {
      opacity: 0.8;
    }

    .blur {
      animation: blur 10s;
    }

    @keyframes blur {
      0% {
        filter: blur(1.5px);
      }
      80% {
        filter: blur(1.5px);
      }
      100% {
        filter: blur(0px);
      }
    }
  </style>
</head>
<body>

  <div class="container-normal">
    <a href="/games" class="tracker-link">Go back to games</a> <!-- Add the link to the orgasm-log page -->
   </div>

  <div class="menu-open" id="app">
    <img class="marker" src="images/marker.png" />
    <img class="wheel" src="images/wheel1.png" />
    <img class="button" src="images/button2.png" />
  </div>
  
  <script>
    (function () {
      const wheel = document.querySelector('.wheel');
      const startButton = document.querySelector('.button');
      const app = document.querySelector('#app');
      let deg = 0;
  
      startButton.addEventListener('click', () => {
        // Disable button during spin
        startButton.style.pointerEvents = 'none';
        // Calculate a new rotation between 5000 and 10 000
        deg = Math.floor(5000 + Math.random() * 5000);
        // Set the transition on the wheel
        wheel.style.transition = 'all 10s ease-out';
        // Rotate the wheel
        wheel.style.transform = `rotate(${deg}deg)`;
        // Apply the blur
        wheel.classList.add('blur');
      });
  
      wheel.addEventListener('transitionend', () => {
        // Remove blur
        wheel.classList.remove('blur');
        // Enable button when spin is over
        startButton.style.pointerEvents = 'auto';
        // Need to set transition to none as we want to rotate instantly
        wheel.style.transition = 'none';
        // Calculate degree on a 360 degree basis to get the "natural" real rotation
        // Important because we want to start the next spin from that one
        const actualDeg = deg % 360;
        // Set the real rotation instantly without animation
        wheel.style.transform = `rotate(${actualDeg}deg)`;
      });
  
      function adjustWheelPosition() {
        const topnav = document.getElementById('myTopnav');
        if (topnav.classList.contains('responsive') && topnav.offsetHeight > 0) {
          const topnavHeight = topnav.offsetHeight;
          const windowHeight = window.innerHeight;
          const appHeight = app.offsetHeight;
          const availableHeight = windowHeight - topnavHeight;
          const offset = (availableHeight - appHeight) / 2;
          app.style.top = `${offset}px`;
        } else {
          app.style.top = '50%';
        }
      }
  
      function toggleGamesDropdown() {
  var dropdownContent = document.querySelector('.games-dropdown-content');
  var gamesButton = document.querySelector('.games');
  var topnav = document.getElementById('myTopnav');
  var app = document.getElementById('app');

  if (dropdownContent.style.display === 'block') {
    dropdownContent.style.display = 'none';
    topnav.classList.remove('menu-open');
    app.style.top = '50%'; // Reset the wheel's position
  } else {
    var buttonRect = gamesButton.getBoundingClientRect();
    var buttonTop = buttonRect.bottom;
    var buttonLeft = buttonRect.left;
    dropdownContent.style.top = buttonTop + 'px';
    dropdownContent.style.left = buttonLeft + 'px';
    dropdownContent.style.display = 'block';
    topnav.classList.add('menu-open');
    adjustWheelPosition(); // Call the adjustWheelPosition() function after the dropdown is displayed
  }
}

  

  
      window.addEventListener('resize', adjustWheelPosition);
    })();
  </script>
  