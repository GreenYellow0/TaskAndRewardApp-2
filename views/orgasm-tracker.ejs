<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Orgasm Tracker</title>
  <link rel="stylesheet" href="/stylesheets/styles.css">
  <link rel="icon" href="/images/LOGO-removebg-preview.png" sizes="32x32">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
  <style>
    .charts-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
    }

    @media (max-width: 950px) {
      .charts-container {
        flex-direction: column;
        align-items: center;
      }
    }

    .chart-container {
      width: 48%;
      margin-bottom: 20px;
    }

    @media (max-width: 950px) {
      .chart-container {
        width: 100%;
      }
    }
  </style>
</head>
<body>
  <%- include('header') %>

  <div class="container-normal">
    <h1>Orgasm Tracker</h1>

    <form action="/saveOrgasm" method="post">
      <label for="type">Select orgasm type:</label>
      <select name="type" id="type">
        <option value="full">Full Orgasm</option>
        <option value="caged">Caged Orgasm</option>
        <option value="ruined">Ruined Orgasm</option>
        <option value="wet-dream">Wet Dream</option>
      </select>

      <button type="submit">Save Orgasm</button>
    </form>



  <h2>All Orgasms:</h2>
  <% if (user) { %>
    <a href="/orgasm-log" class="button-orgasm-log ">View All Orgasms</a> <!-- Add the link to the orgasm-log page -->
  <% } %>
  
</div>
<br>
    
<div class="container-normal">
      <!-- Add the dropdown menu and button for time range selection -->
      <select id="timeRange">
        <option value="week">Week Progress</option>
        <option value="month">Month Progress</option>
        <option value="year">Year Progress</option>
      </select>
      <button id="generateChartBtn" onclick="generateChart()">Generate Chart</button>
    </div>
</div>

  <!-- Add the container for the charts -->
  <div class="charts-container">
    <div class="chart-container">
      <canvas id="barChart"></canvas>
    </div>
    <div class="chart-container">
      <canvas id="doughnutChart"></canvas>
    </div>
  </div>

  <%- include('footer') %>

  <script>
    // Retrieve the orgasm data from the server-side variable
    const orgasmsData = JSON.parse('<%- JSON.stringify(orgasms) %>');
  
    // Prepare the data for the doughnut chart
    const orgasmTypes = ['full', 'ruined', 'caged', 'wet-dream'];
    const labels = orgasmTypes;
    const orgasmCounts = orgasmTypes.map(type => orgasmsData.filter(orgasm => orgasm.type === type).length);
  
    new Chart("doughnutChart", {
      type: "doughnut",
      data: {
        labels: labels,
        datasets: [{
          label: "Orgasm Count",
          data: orgasmCounts,
          backgroundColor: [
            "#b91d47",
            "#00aba9",
            "#2b5797",
            "#e8c3b9"
          ]
        }]
      },
      options: {
        responsive: true,
        title: {
          display: true,
          text: "Orgasm Count by Type"
        }
      }
    });
  
    let barChart;
    const barChartOptions = {
      responsive: true,
      scales: {
        y: {
          beginAtZero: true,
          stepSize: 1
        }
      },
      title: {
        display: true,
        text: ""
      }
    };
  
    function generateChart() {
      const selectedRange = document.getElementById("timeRange").value;
      let chartTitle = "";
      let labels = [];
      let data = [];
  
      if (selectedRange === "week") {
        chartTitle = "Orgasm Count for the Week";
        labels = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
  
        const today = new Date();
        const currentDay = today.getDay();
        const startOfWeek = new Date(today);
        startOfWeek.setDate(today.getDate() - currentDay + (currentDay === 0 ? -6 : 1));
        startOfWeek.setHours(0, 0, 0, 0);
  
        data = Array(7).fill(0);
  
        orgasmsData.forEach((orgasm) => {
          const date = new Date(orgasm.date);
          date.setHours(0, 0, 0, 0);
  
          const dayDiff = Math.floor((date - startOfWeek) / (24 * 60 * 60 * 1000));
  
          if (dayDiff >= 0 && dayDiff < 7) {
            data[dayDiff]++;
          }
        });
      } else if (selectedRange === "month") {
        chartTitle = "Orgasm Count for the Month";
        const currentDate = new Date();
        const currentMonth = currentDate.getMonth();
        const totalDays = new Date(currentDate.getFullYear(), currentMonth + 1, 0).getDate();
  
        labels = Array.from({ length: totalDays }, (_, i) => (i + 1).toString());
        data = Array.from({ length: totalDays }, () => 0);
  
        orgasmsData.forEach((orgasm) => {
          const date = new Date(orgasm.date);
          if (date.getMonth() === currentMonth) {
            const dayOfMonth = date.getDate();
            data[dayOfMonth - 1]++;
          }
        });
      } else if (selectedRange === "year") {
        chartTitle = "Orgasm Count for the Year";
        labels = [
          "January", "February", "March", "April", "May", "June",
          "July", "August", "September", "October", "November", "December"
        ];
        data = Array(12).fill(0);
  
        orgasmsData.forEach((orgasm) => {
          const date = new Date(orgasm.date);
          const month = date.getMonth();
          data[month]++;
        });
      }
  
      if (barChart) {
        barChart.destroy();
        document.getElementById("barChart").removeEventListener("mousemove", handleChartHover);
      }
  
      barChart = new Chart("barChart", {
        type: "bar",
        data: {
          labels: labels,
          datasets: [{
            label: "Orgasm Count",
            data: data,
            backgroundColor: "rgba(75, 192, 192, 0.2)",
            borderColor: "rgba(75, 192, 192, 1)",
            borderWidth: 1
          }]
        },
        options: barChartOptions
      });
  
      document.getElementById("barChart").addEventListener("mousemove", handleChartHover);
    }
  
    function handleChartHover(event) {
      // Code to handle the chart hover event
      // ...
    }
  
    document.addEventListener("DOMContentLoaded", function() {
      generateChart();
    });
  </script>
  
  
  
  
  
  
  
</body>
</html>
